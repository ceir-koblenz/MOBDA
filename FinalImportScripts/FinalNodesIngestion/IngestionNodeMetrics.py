#Skript zum Import der Daten aus der Metrics Datenbank
#Libraries
#Database Connector
from ibm_db import connect
import ibm_db_dbi
#Pandas ist f√ºr den Dataframe 
import pandas as pd
#NeoInterface ist Schnittstelle zu Neo4j
import neointerface

#Verbindung zur Metrics Datenbank von UniConnect
cnxnmetrics = connect('DATABASE=metrics;'
                 'HOSTNAME=db2.uniconnect.de;'   
                 'PORT=50000;'
                 'PROTOCOL=TCPIP;'
                 'UID=reader19;'
                 'PWD=b2BwaRHN;', '', '')

connmetrics = ibm_db_dbi.Connection(cnxnmetrics)

#SQL Queriy

sqlEvent = """ SELECT EVENTS.ID AS id, EVENTS.EVENT_NAME AS title, EVENTS.event_ts AS created, USERS.UUID, EVENTS.SOURCE_ID, EVENTS.ITEM_UUID, REPLACE(EVENTS.ITEM_UUID, '-', '') AS match_item_uuid,
                  CASE
                    WHEN EVENTS.event_name = 'activity.completed' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.completed.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.copied' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.entry.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.entry.duplicated' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.duplicated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.file.attached' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.file.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.entry.file.replaced' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.entry.move.from.activity' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.entry.move.to.activity' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.entry.tag.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.tag.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.entry.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.entry.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.entry.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.followed' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.membership.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.priority.set' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.reply.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.reply.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.reply.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.section.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.section.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.section.moved' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.section.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.tag.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.tag.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.template.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.template.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.template.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.template.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.template.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.template.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.template.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.todo.completed' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.todo.completed.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.todo.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.todo.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.todo.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.todo.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.todo.uncompleted' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.todo.uncompleted.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.todo.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.todo.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.todo.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.uncompleted' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.uncompleted.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.undeleted' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.undeleted.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.unfollowed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'activity.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'activity.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'activity.visibility.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'blog.comment.approved' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'blog.comment.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.comment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.entry.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.entry.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.entry.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.entry.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.entry.recommended' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.entry.unrecommended' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.entry.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'blog.entry.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.entry.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.file.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'blog.file.uploaded' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.followed' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'blog.member.added' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'blog.member.removed' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'blog.settings.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'communities.widget.added' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'communities.widget.removed' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.bookmark.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.bookmark.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.bookmark.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.bookmark.removed.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.bookmark.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.bookmark.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.bookmark.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.feed.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.feed.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.feed.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.feed.removed.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.feed.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.feed.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.feed.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.follow.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.follow.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.invite.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.invite.declined' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.invite.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.invite.revoked' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.membership.added' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.membership.removed' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.membership.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.restored' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.softdeleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.softdeleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'community.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.wall.comment.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.wall.comment.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.wall.recommendation.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.wall.recommendation.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'community.wallpost.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'community.wallpost.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.added.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.edited' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.edited.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'dogear.bookmark.edited.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'dogear.person.unwatched' THEN 'READ'
                    WHEN EVENTS.event_name = 'dogear.person.watched' THEN 'READ'
                    WHEN EVENTS.event_name = 'ecm_files.access.file.ecm.file.downloaded' THEN 'READ'
                    WHEN EVENTS.event_name = 'files.collection.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.collection.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.collection.file.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.collection.file.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.collection.notification.set' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.collection.notification.unset' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.collection.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.file.comment.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.comment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.file.comment.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.file.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.file.downloaded' THEN 'READ'
                    WHEN EVENTS.event_name = 'files.file.notification.set' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.file.notification.unset' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.file.recommend.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.recommend.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.file.share.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.tag.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.tag.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.file.undeleted' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'files.file.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.file.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.file.version.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.file.version.restored' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.library.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'files.library.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'files.library.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.followed' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.locked' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.tag.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.tag.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.attachment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.attachment.uploaded' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.followed' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.locked' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.moved' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.pinned' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.recommended' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.attachment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.attachment.uploaded' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.recommended' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.unrecommended' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.reply.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.tag.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.topic.tag.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.unfollowed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.unlocked' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.unpinned' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.unrecommended' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.topic.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.topic.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.unfollowed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'forum.unlocked' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'forum.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'forum.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'homepage.widget.added' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'homepage.widget.removed' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'ideationblog.comment.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.comment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'ideationblog.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'ideationblog.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'ideationblog.file.uploaded' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.deleted.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.graduated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.unvoted' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.updated.untagged' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'ideationblog.idea.voted' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'ideationblog.settings.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'null' THEN 'READ' /*null is for read/visit actions*/
                    WHEN EVENTS.event_name = 'profiles.colleague.added' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.colleague.created' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.connection.rejected' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.person.about.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.person.audio.deleted' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.person.audio.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.person.followed' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.person.link.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.person.photo.deleted' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.person.photo.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.person.selftagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.person.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.person.unfollowed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'profiles.status.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.tag.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'profiles.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'profiles.wall.comment.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.wall.comment.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'profiles.wall.recommendation.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.wall.recommendation.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'profiles.wallpost.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'profiles.wallpost.removed' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'tag.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.library.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.library.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.library.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.library.notification.set' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.library.notification.unset' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.library.tag.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.library.tag.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.library.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'wiki.library.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.attachment.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.attachment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.page.attachment.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'wiki.page.comment.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.comment.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.page.comment.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'wiki.page.created' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.created.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.page.notification.set' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.recommendation.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.recommendation.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.page.tag.added' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.tag.deleted' THEN 'DELETE'
                    WHEN EVENTS.event_name = 'wiki.page.undeleted' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.updated' THEN 'UPDATE'
                    WHEN EVENTS.event_name = 'wiki.page.updated.tagged' THEN 'CREATE'
                    WHEN EVENTS.event_name = 'wiki.page.version.deleted' THEN 'DELETE'
                  ELSE 'UNDEFINED' END AS action
                FROM METRICS.F_TRX_EVENTS AS Events 
                JOIN METRICS.F_TRX_USERS AS users ON EVENTS.USER_ID = USERS.ID 
;"""


#Einlesen der Daten aus den SQL Queries in die Dataframes
dfEvent = pd.read_sql(sqlEvent, connmetrics)


#Datacleaning Event
#Timestamp
#print(dfEvent['CREATED'])
dfEvent['CREATED'] = pd.to_datetime(dfEvent['CREATED'])
# Zeitzone setzen
#dfEvent['CREATED'] = dfEvent['CREATED'].dt.tz_localize('CET')
#print(dfEvent['CREATED'])

#Verbidung zu Neo4j
neodb = neointerface.NeoInterface(host="neo4j://ma-lschloemer.bas.uni-koblenz.de:7687" , credentials=("neo4j", "neo4jneo4j"))

#Datenimport aus dem Dataframe nach Neo4j
#(Name Dataframe, Name Label, Aktivieren der Mergefunktion statt Create)
neodb.load_df(dfEvent, "Event", merge=True)
